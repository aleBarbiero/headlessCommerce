/**
 * Holds a template and renders the template with the given data
 */
export declare class Template {
    path: string;
    handlebars: typeof Handlebars;
    content: string;
    /**
     * Creates a Template object
     * @param path - Path to the template file
     * @param handlebars - Optional handlebars instance, default instance is used if not provided
     */
    constructor(path: string, handlebars?: typeof Handlebars);
    /**
     * Make substitutions and write the template to a file.
     *
     * @param context - The data model to use for substitutions
     * @param destination - The file path to write the rendered template to
     */
    render(context: {
        [key: string]: unknown;
    }, destination: string): Promise<void>;
}
//# sourceMappingURL=template.d.ts.map