"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
/*
 * Copyright (c) 2020, salesforce.com, inc.
 * All rights reserved.
 * SPDX-License-Identifier: BSD-3-Clause
 * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/BSD-3-Clause
 */
const api_1 = require("./api");
const name_1 = require("./name");
/**
 * A group of API objects. Common transformations of the group name are cached
 * for reference in templates and file paths.
 */
class ApiGroup extends Array {
    constructor(apis = [], name = "") {
        super(...apis);
        this.name = new name_1.Name(name);
    }
    /**
     * Create a group from a list of API spec files. This is static and not a
     * constructor because it is async. Files are processed in parallel.
     *
     * @param apiSpecFilePaths - a list of paths to API spec files like RAML
     * @param name - the name of this group
     */
    static init(apiSpecFilePaths, name = "") {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return new ApiGroup(yield Promise.all(apiSpecFilePaths.map(p => api_1.Api.init(p, name))), name);
        });
    }
    /**
     * Searches the group for a particular API by name.
     *
     * @param name - Name of the API to return from the collection
     */
    get(name) {
        return this.find(a => a.name.original === name);
    }
}
exports.ApiGroup = ApiGroup;
//# sourceMappingURL=apiGroup.js.map