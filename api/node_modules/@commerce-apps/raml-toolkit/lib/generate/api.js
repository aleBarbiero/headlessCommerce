"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const parser_1 = require("../common/parser");
const name_1 = require("./name");
/**
 * An API represented as an AMF model. Includes the extracted data types
 * defined in the spec. Common transformations of the name are cached for
 * reference in templates and for use in assembling file paths.
 */
class Api {
    constructor(model, group = "", path = "") {
        var _a;
        this.model = model;
        this.group = group;
        this.path = path;
        this.dataTypes = parser_1.getAllDataTypes(model);
        this.name = new name_1.Name((_a = model.encodes) === null || _a === void 0 ? void 0 : _a.name.value());
        Object.freeze(this);
    }
    /**
     * Create a new Api object from a file. This is static and not a constructor
     * because it is async.
     *
     * @param apiSpecFilePath - the path to an API spec file like RAML to be parsed to AMF
     * @param group - if the API is part of a group, the name of that group
     */
    static init(apiSpecFilePath, group = "") {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return new Api(parser_1.resolveApiModel(yield parser_1.parseRamlFile(apiSpecFilePath), "editing"), group, apiSpecFilePath);
        });
    }
}
exports.Api = Api;
//# sourceMappingURL=api.js.map