{"ast":null,"code":"var _jsxFileName = \"/home/alessio_barbiero/headlessCommerce/client/src/contextAPI.js\";\nimport React, { Component } from 'react';\nconst ProductContext = React.createContext();\nexport default class ProductProvider extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      categories: [],\n      products: [],\n      sortedProducts: [],\n      cart: [],\n      cartTotal: 0,\n      onesToWatch: [],\n      loading: true,\n      type: \"all\",\n      compatibility: \"all\",\n      brand: \"all\",\n      price: 0,\n      minPrice: 0,\n      maxPrice: 0\n    };\n\n    this.setUp = async () => {\n      try {\n        let categories = this.getCategories();\n        let products = [];\n        let cart = this.getCart();\n        let tempSorted = products.sort((a, b) => a.price > b.price ? 1 : -1);\n        let onesToWatch = [tempSorted[0], tempSorted[1], tempSorted[2]];\n        let minPrice = Math.min(...products.map(item => item.price));\n        let maxPrice = Math.max(...products.map(item => item.price));\n        let price = maxPrice;\n        this.setState({\n          categories,\n          products,\n          sortedProducts: products,\n          cart,\n          onesToWatch,\n          loading: false,\n          maxPrice,\n          minPrice,\n          maxSize,\n          price\n        });\n      } catch (error) {\n        console.log(error);\n      } //try_catch\n\n    };\n\n    this.getCart = async () => {\n      let cart = await fetch(\"http://localhost:9000/getBasketAPI\").then(res => res.json().catch(err => err));\n      let tempCart = cart[\"productItems\"].map(product => {\n        let id = product.productId;\n        let price = product.price;\n        let name = product.productName;\n        let item = {\n          id,\n          price,\n          name\n        };\n        return item;\n      });\n      return tempCart;\n    };\n\n    this.getCategories = async () => {\n      let categories = await fetch(\"http://localhost:9000/categoriesAPI\").then(res => res.json()).catch(err => err);\n      let tempCat = categories[\"data\"].map(item => {\n        let id = item.id;\n        let name = item.name.default;\n        let category = {\n          id,\n          name\n        };\n        return category;\n      });\n      return tempCat;\n    };\n\n    this.sort = event => {\n      let {\n        sortedProducts\n      } = this.state;\n      const value = event.target.value;\n      if (value === \"alpha\") sortedProducts = sortedProducts.sort((a, b) => a.name > b.name ? 1 : -1);else if (value === \"price\") sortedProducts = sortedProducts.sort((a, b) => a.price > b.price ? 1 : -1);\n      this.setState({\n        sortedProducts: sortedProducts\n      });\n    };\n\n    this.getProduct = element => {\n      let tempProduct = [...this.state.products];\n      const product = tempProduct.find(product => product.element === element);\n      return product;\n    };\n\n    this.resetChanges = event => {\n      let {\n        products\n      } = this.state;\n      this.setState({\n        sortedProducts: products\n      });\n    };\n\n    this.handleChanges = event => {\n      const target = event.target;\n      const value = target.type === 'checkbox' ? target.checked : target.value;\n      const name = event.target.name;\n      this.setState({\n        [name]: value\n      }, this.filterProducts);\n    };\n\n    this.addToCart = async id => {\n      await fetch(`http://localhost:9000/addItemToBasketAPI?item=${id}`).then(res => res.json()).catch(err => err);\n      let cart = this.getCart();\n      this.setState({\n        cart\n      });\n    };\n\n    this.increment = async id => {};\n\n    this.decrement = async id => {};\n\n    this.clearCart = () => {};\n\n    this.removeItem = async id => {};\n\n    this.restoreValues = () => {};\n\n    this.addTotals = () => {};\n\n    this.filterProducts = () => {\n      let {\n        products,\n        type,\n        compatibility,\n        price,\n        brand\n      } = this.state;\n      let tempProducts = [...products]; //capacity\n\n      if (compatibility !== 'all') tempProducts = tempProducts.filter(product => product.compatibility.includes(compatibility)); //type\n\n      if (type !== 'all') tempProducts = tempProducts.filter(product => product.type === type); //price\n\n      price = parseInt(price);\n      tempProducts = tempProducts.filter(product => product.price <= price); //brand\n\n      if (brand !== 'all') tempProducts = tempProducts.filter(product => product.brand === brand);\n      this.setState({\n        sortedProducts: tempProducts\n      });\n    };\n  }\n\n  //filterProducts\n  componentDidMount() {\n    this.setUp();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(ProductContext.Provider, {\n      value: { ...this.state,\n        getProduct: this.getProduct\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 13\n      }\n    }, this.props.children);\n  } //render\n\n\n} //ProductProvider\n\nconst ProductConsumer = ProductContext.Consumer;\nexport function withProductConsumer(Component) {\n  return function ConsumerWrapper(props) {\n    return /*#__PURE__*/React.createElement(ProductConsumer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 13\n      }\n    }, value => /*#__PURE__*/React.createElement(Component, Object.assign({}, props, {\n      context: value,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 27\n      }\n    })));\n  };\n} //withProductConsumer\n\nexport { ProductProvider, ProductConsumer, ProductContext };","map":{"version":3,"sources":["/home/alessio_barbiero/headlessCommerce/client/src/contextAPI.js"],"names":["React","Component","ProductContext","createContext","ProductProvider","state","categories","products","sortedProducts","cart","cartTotal","onesToWatch","loading","type","compatibility","brand","price","minPrice","maxPrice","setUp","getCategories","getCart","tempSorted","sort","a","b","Math","min","map","item","max","setState","maxSize","error","console","log","fetch","then","res","json","catch","err","tempCart","product","id","productId","name","productName","tempCat","default","category","event","value","target","getProduct","element","tempProduct","find","resetChanges","handleChanges","checked","filterProducts","addToCart","increment","decrement","clearCart","removeItem","restoreValues","addTotals","tempProducts","filter","includes","parseInt","componentDidMount","render","props","children","ProductConsumer","Consumer","withProductConsumer","ConsumerWrapper"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nconst ProductContext= React.createContext();\n\nexport default class ProductProvider extends Component {\n\n    state={\n        categories: [],\n        products:[],\n        sortedProducts: [],\n        cart:[],\n        cartTotal:0,\n        onesToWatch: [],\n        loading: true,\n        type: \"all\",\n        compatibility: \"all\",\n        brand: \"all\",\n        price: 0,\n        minPrice: 0,\n        maxPrice: 0,\n    };\n\n    setUp = async() => {\n        try{\n            let categories=this.getCategories();\n            let products=[];\n            let cart=this.getCart();\n            let tempSorted=products.sort((a, b) => (a.price > b.price) ? 1 : -1);\n            let onesToWatch=[tempSorted[0], tempSorted[1], tempSorted[2]];\n            let minPrice=Math.min(...products.map(item => item.price));\n            let maxPrice=Math.max(...products.map(item => item.price));\n            let price=maxPrice;\n\n            this.setState({\n                categories,\n                products,\n                sortedProducts:products,\n                cart,\n                onesToWatch,\n                loading:false,\n                maxPrice,\n                minPrice,\n                maxSize,\n                price\n            });\n\n     }catch(error){\n            console.log(error);\n        }//try_catch\n    }//setUp\n\n    //getCart\n    getCart = async() => {\n        let cart = await fetch(\"http://localhost:9000/getBasketAPI\")\n        .then(res => res.json()\n        .catch(err => err));\n        let tempCart = cart[\"productItems\"].map(product => {\n            let id=product.productId;\n            let price=product.price;\n            let name=product.productName;\n            let item={id,price,name};\n            return item;\n        });\n        return tempCart;\n    }//getCart\n\n    //getCategories\n    getCategories = async() => {\n        let categories = await fetch(\"http://localhost:9000/categoriesAPI\")\n        .then(res => res.json())\n        .catch(err => err);\n        let tempCat = categories[\"data\"].map(item => {\n            let id=item.id;\n            let name=item.name.default;\n            let category={id,name};\n            return category;\n        })\n        return tempCat;\n    }//getCategories\n\n    //sort\n    sort = event => {\n        let {\n            sortedProducts\n        } = this.state;\n        const value=event.target.value;\n        if(value===\"alpha\")\n            sortedProducts=sortedProducts.sort((a, b) => (a.name > b.name) ? 1 : -1);\n        else if(value===\"price\")\n            sortedProducts=sortedProducts.sort((a, b) => (a.price > b.price) ? 1 : -1);\n        this.setState({sortedProducts:sortedProducts});\n    }//sort\n\n    //getProduct\n    getProduct = (element) => {\n        let tempProduct=[...this.state.products];\n        const product=tempProduct.find(product => product.element === element);\n        return product;\n    }//getProduct\n\n    //resetChanges\n    resetChanges = event => {\n        let{\n            products\n        } = this.state;\n        this.setState({sortedProducts:products})\n    }//resetChanges\n\n    //handleChanges\n    handleChanges = event => {\n        const target=event.target;\n        const value=target.type === 'checkbox' ? target.checked : target.value;\n        const name=event.target.name;\n        this.setState({[name]:value},this.filterProducts)\n    }//handleChanges\n\n    //addToCart\n    addToCart = async(id) => {\n        await fetch(`http://localhost:9000/addItemToBasketAPI?item=${id}`)\n        .then(res => res.json())\n        .catch(err => err);\n        let cart=this.getCart();\n        this.setState({cart});\n    }\n\n    //increment\n    increment = async(id) => {\n\n    }\n\n    //decrement\n    decrement = async(id) => {\n\n    }\n\n    //clearCart\n    clearCart = () => {\n\n    }\n\n    //removeItem\n    removeItem = async(id) => {\n\n    }\n\n    //restore\n    restoreValues = () => {\n\n    } \n\n    //addTotals\n    addTotals = () => {\n\n    }\n\n    filterProducts = () => {\n        let{\n            products,\n            type,\n            compatibility,\n            price,\n            brand\n        } = this.state;\n        let tempProducts=[...products];\n\n        //capacity\n        if(compatibility!=='all')\n            tempProducts=tempProducts.filter(product => product.compatibility.includes(compatibility))\n\n        //type\n        if(type!=='all')\n            tempProducts=tempProducts.filter(product => product.type === type);\n        \n        //price\n        price=parseInt(price);\n        tempProducts=tempProducts.filter(product => product.price <= price);\n        \n        //brand\n        if(brand!=='all')\n                tempProducts=tempProducts.filter(product => product.brand === brand)\n\n        this.setState({\n            sortedProducts:tempProducts\n        })\n    }//filterProducts\n    \n    componentDidMount(){\n        this.setUp();\n    }\n\n    render() {\n        return (\n            <ProductContext.Provider value={{...this.state,getProduct: this.getProduct}}>\n                {this.props.children}\n            </ProductContext.Provider>\n        );\n    }//render\n}//ProductProvider\n\nconst ProductConsumer = ProductContext.Consumer;\n\nexport function withProductConsumer(Component){\n    return function ConsumerWrapper(props){\n        return(\n            <ProductConsumer>\n                {value => <Component {...props} context={value}/>}\n            </ProductConsumer>\n        )}\n}//withProductConsumer\n\nexport{ProductProvider,ProductConsumer,ProductContext}"]},"metadata":{},"sourceType":"module"}