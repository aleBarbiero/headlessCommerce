{"ast":null,"code":"import React, { Component } from 'react';\nimport { MdLocalShipping } from 'react-icons/md';\nimport { GrCreditCard } from 'react-icons/gr';\nimport CheckoutElement from './CheckoutElement';\nimport Title from '../Title';\nimport { ProductContext } from '../../contextAPI';\nimport Error from '../../pages/Error';\nimport Loading from '../Cart/LoadingCart';\nimport { Link } from 'react-router-dom';\nexport default class Checkout extends Component {\n  constructor() {\n    super();\n\n    this.handleChanges = event => {\n      const target = event.target;\n      const value = target.value;\n      const name = target.name;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.checkErrors = () => {\n      let {\n        name,\n        surname,\n        email,\n        address,\n        number,\n        city,\n        state,\n        country,\n        cap,\n        month,\n        year,\n        cvc,\n        card\n      } = this.state;\n      let {\n        errName,\n        errSurname,\n        errEmail,\n        errAdd,\n        errNum,\n        errCity,\n        errState,\n        errCountry,\n        errCap,\n        errCVC,\n        errExpire,\n        errCard\n      } = false;\n      const mailFormat = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/;\n\n      if (name.length < 2) {\n        this.setState({\n          nameError: \"Invalid name\"\n        });\n        errName = true;\n      } else {\n        this.setState({\n          nameError: \"\"\n        });\n        errName = false;\n      }\n\n      if (surname.length < 2) {\n        this.setState({\n          surnameError: \"Invalid surname\"\n        });\n        errSurname = true;\n      } else {\n        this.setState({\n          surnameError: \"\"\n        });\n        errSurname = false;\n      }\n\n      if (!mailFormat.test(email)) {\n        this.setState({\n          emailError: \"Invalid e-mail\"\n        });\n        errEmail = true;\n      } else {\n        this.setState({\n          emailError: \"\"\n        });\n        errEmail = false;\n      }\n\n      if (address.length < 5) {\n        this.setState({\n          addressError: \"Invalid error\"\n        });\n        errAdd = true;\n      } else {\n        this.setState({\n          addressError: \"\"\n        });\n        errAdd = false;\n      }\n\n      if (number.length === 0) {\n        this.setState({\n          numberError: \"Invalid number\"\n        });\n        errNum = true;\n      } else {\n        this.setState({\n          numberError: \"\"\n        });\n        errNum = false;\n      }\n\n      if (city.length < 4) {\n        this.setState({\n          cityError: \"Invalid city\"\n        });\n        errCity = true;\n      } else {\n        this.setState({\n          cityError: \"\"\n        });\n        errCity = false;\n      }\n\n      if (state.length < 3) {\n        this.setState({\n          stateError: \"Invalid state\"\n        });\n        errState = true;\n      } else {\n        this.setState({\n          stateError: \"\"\n        });\n        errState = false;\n      }\n\n      if (country.length < 4) {\n        this.setState({\n          countryError: \"Invalid country\"\n        });\n        errCountry = true;\n      } else {\n        this.setState({\n          countryError: \"\"\n        });\n        errCountry = false;\n      }\n\n      if (cap.toString().length !== 5) {\n        this.setState({\n          capError: \"Invalid code\"\n        });\n        errCap = true;\n      } else {\n        this.setState({\n          capError: \"\"\n        });\n        errCap = false;\n      }\n\n      if (cvc.toString().length !== 3) {\n        this.setState({\n          cvcError: \"Invalid code\"\n        });\n        errCVC = true;\n      } else {\n        this.setState({\n          cvcError: \"\"\n        });\n        errCVC = false;\n      }\n\n      var date = new Date(year, month);\n      var today = new Date();\n\n      if (date < today) {\n        this.setState({\n          expireError: \"Invalid date\"\n        });\n        errExpire = true;\n      } else {\n        this.setState({\n          expireError: \"\"\n        });\n        errExpire = false;\n      }\n\n      if (card.length !== 16) {\n        this.setState({\n          cardError: \"Invalid card number\"\n        });\n        errCard = true;\n      } else {\n        this.setState({\n          cardError: \"\"\n        });\n        errCard = false;\n      }\n\n      console.log(month, year);\n      return {\n        errName,\n        errSurname,\n        errEmail,\n        errAdd,\n        errNum,\n        errCity,\n        errState,\n        errCountry,\n        errCap,\n        errCVC,\n        errExpire,\n        errCard\n      };\n    };\n\n    this.buy = () => {\n      let {\n        errName,\n        errSurname,\n        errEmail,\n        errAdd,\n        errNum,\n        errCity,\n        errState,\n        errCountry,\n        errCap,\n        errCVC,\n        errExpire,\n        errCard\n      } = this.checkErrors();\n      let {\n        toBuy\n      } = this.state;\n      const {\n        buyItems\n      } = this.context;\n\n      if (toBuy) {\n        if (!errName && !errSurname && !errEmail && !errAdd && !errNum && !errState && !errCountry && !errCity && !errCap && !errCVC && !errCard && !errExpire) buyItems();\n      } //if\n\n    };\n\n    this.state = {\n      name: \"\",\n      nameError: \"\",\n      surname: \"\",\n      surnameError: \"\",\n      address: \"\",\n      addressError: \"\",\n      number: \"\",\n      numberError: \"\",\n      city: \"\",\n      cityError: \"\",\n      state: \"\",\n      stateError: \"\",\n      cap: \"\",\n      capError: \"\",\n      email: \"\",\n      emailError: \"\",\n      country: \"\",\n      countryError: \"\",\n      card: \"\",\n      cardError: \"\",\n      month: \"\",\n      year: \"\",\n      expireError: \"\",\n      cvc: \"\",\n      cvcError: \"\",\n      toBuy: false\n    };\n  }\n\n  componentDidMount() {\n    window.scrollTo(0, 0);\n  } //buy\n\n\n}\nCheckout.contextType = ProductContext;","map":{"version":3,"sources":["/home/alessio_barbiero/headlessCommerce/client/src/components/Checkout/Checkout.js"],"names":["React","Component","MdLocalShipping","GrCreditCard","CheckoutElement","Title","ProductContext","Error","Loading","Link","Checkout","constructor","handleChanges","event","target","value","name","setState","checkErrors","surname","email","address","number","city","state","country","cap","month","year","cvc","card","errName","errSurname","errEmail","errAdd","errNum","errCity","errState","errCountry","errCap","errCVC","errExpire","errCard","mailFormat","length","nameError","surnameError","test","emailError","addressError","numberError","cityError","stateError","countryError","toString","capError","cvcError","date","Date","today","expireError","cardError","console","log","buy","toBuy","buyItems","context","componentDidMount","window","scrollTo","contextType"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\nimport {MdLocalShipping} from 'react-icons/md';\nimport {GrCreditCard} from 'react-icons/gr';\nimport CheckoutElement from './CheckoutElement';\nimport Title from '../Title';\nimport {ProductContext} from '../../contextAPI';\nimport Error from '../../pages/Error';\nimport Loading from '../Cart/LoadingCart';\nimport {Link} from 'react-router-dom';\n\nexport default class Checkout extends Component {\n\n    constructor(){\n        super();\n        this.state = {\n            name: \"\",\n            nameError: \"\",\n            surname: \"\",\n            surnameError: \"\",\n            address: \"\",\n            addressError:\"\",\n            number: \"\",\n            numberError: \"\",\n            city: \"\",\n            cityError: \"\",\n            state: \"\",\n            stateError: \"\",\n            cap: \"\",\n            capError: \"\",\n            email: \"\",\n            emailError: \"\",\n            country: \"\",\n            countryError: \"\",\n            card: \"\",\n            cardError: \"\",\n            month: \"\",\n            year: \"\",\n            expireError: \"\",\n            cvc: \"\",\n            cvcError: \"\",\n            toBuy: false\n        }\n    }\n\n    static contextType = ProductContext;\n\n    componentDidMount(){\n        window.scrollTo(0,0);\n    }\n\n    handleChanges = event => {\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n        this.setState({\n            [name] : value\n        })\n    }\n\n    checkErrors = () => {\n        let {\n            name,\n            surname,\n            email,\n            address,\n            number,\n            city,\n            state,\n            country,\n            cap,\n            month,\n            year,\n            cvc,\n            card\n        } = this.state;\n\n        let {\n            errName,\n            errSurname,\n            errEmail,\n            errAdd,\n            errNum,\n            errCity,\n            errState,\n            errCountry,\n            errCap,\n            errCVC,\n            errExpire,\n            errCard\n        } = false;\n\n        const mailFormat = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/;\n\n        if(name.length < 2){\n            this.setState({nameError: \"Invalid name\"});\n            errName=true;\n        }else{\n            this.setState({nameError: \"\"});\n            errName=false;\n        }\n        \n        if(surname.length < 2){\n            this.setState({surnameError: \"Invalid surname\"});\n            errSurname=true;\n        }else{\n            this.setState({surnameError: \"\"});\n            errSurname=false;\n        }\n        \n        if(!(mailFormat.test(email))){\n            this.setState({emailError: \"Invalid e-mail\"});\n            errEmail=true;\n        }else{\n            this.setState({emailError: \"\"});\n            errEmail=false;\n        }\n\n        if(address.length < 5){\n            this.setState({addressError: \"Invalid error\"});\n            errAdd=true;\n        }else{\n            this.setState({addressError: \"\"});\n            errAdd=false;\n        }\n\n        if(number.length === 0){\n            this.setState({numberError: \"Invalid number\"});\n            errNum=true;\n        }else{\n            this.setState({numberError: \"\"});\n            errNum=false;\n        }\n\n        if(city.length < 4){\n            this.setState({cityError: \"Invalid city\"});\n            errCity=true;\n        }else{\n            this.setState({cityError:\"\"});\n            errCity=false;\n        }\n\n        if(state.length < 3){\n            this.setState({stateError: \"Invalid state\"});\n            errState=true;\n        }else{\n            this.setState({stateError: \"\"});\n            errState=false;\n        }\n\n        if(country.length < 4){\n            this.setState({countryError: \"Invalid country\"});\n            errCountry=true;\n        }else{\n            this.setState({countryError: \"\"});\n            errCountry=false;\n        } \n\n        if(cap.toString().length !== 5){\n            this.setState({capError: \"Invalid code\"});\n            errCap=true;\n        }else{\n            this.setState({capError: \"\"});\n            errCap=false;\n        }\n\n        if(cvc.toString().length !== 3){\n            this.setState({cvcError: \"Invalid code\"});\n            errCVC=true;\n        }else{\n            this.setState({cvcError: \"\"});\n            errCVC=false;\n        }\n\n        var date = new Date(year,month);\n        var today = new Date();\n\n        if(date < today){\n            this.setState({expireError: \"Invalid date\"})\n            errExpire=true\n        }else{\n            this.setState({expireError: \"\"});\n            errExpire=false;\n        }\n\n        if(card.length !== 16){\n            this.setState({cardError:\"Invalid card number\"});\n            errCard=true\n        }else{\n            this.setState({cardError: \"\"})\n            errCard=false;\n        }\n\n        console.log(month,year)\n        return {\n            errName,\n            errSurname,\n            errEmail,\n            errAdd,\n            errNum,\n            errCity,\n            errState,\n            errCountry,\n            errCap,\n            errCVC,\n            errExpire,\n            errCard\n        }\n    }//checkErrors\n\n    buy = () => {\n        let {\n            errName,\n            errSurname,\n            errEmail,\n            errAdd,\n            errNum,\n            errCity,\n            errState,\n            errCountry,\n            errCap,\n            errCVC,\n            errExpire,\n            errCard\n        } = this.checkErrors();\n        let {toBuy} = this.state;\n        const {buyItems} = this.context;\n        if(toBuy){\n            if(!errName && !errSurname && !errEmail && !errAdd && !errNum && !errState && !errCountry && !errCity && !errCap && !errCVC && !errCard && !errExpire)\n                buyItems();\n        }//if\n    }//buy\n\n    \n}\n"]},"metadata":{},"sourceType":"module"}