{"ast":null,"code":"var _jsxFileName = \"/home/alessio_barbiero/headlessCommerce/client/src/context.js\";\nimport React, { Component } from 'react'; //import items from './data';\n\nimport Client from './dataAPI';\nconst ProductContext = React.createContext();\nexport default class ProductProvider extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      testProd: \"\",\n      products: [],\n      sortedProducts: [],\n      onesToWatch: [],\n      loading: true,\n      type: \"all\",\n      compatibility: \"all\",\n      brand: \"all\",\n      price: 0,\n      minPrice: 0,\n      maxPrice: 0\n    };\n\n    this.getData = async () => {\n      fetch(\"http://localhost:9000/testAPI\").then(res => res.text()).then(res => this.setState({\n        apiResponse: res\n      })).catch(err => err);\n      let testProd = test;\n\n      try {\n        let response = await Client.getEntries({\n          content_type: \"photoStudio\",\n          order: \"fields.price\"\n        });\n        let products = this.formatData(response.items);\n        let tempSorted = products.sort((a, b) => a.price > b.price ? 1 : -1);\n        let onesToWatch = [tempSorted[0], tempSorted[1], tempSorted[2]];\n        let minPrice = Math.min(...products.map(item => item.price));\n        let maxPrice = Math.max(...products.map(item => item.price));\n        let maxSize = Math.max(...products.map(item => item.size));\n        let price = maxPrice;\n        this.setState({\n          testProd,\n          products,\n          sortedProducts: products,\n          onesToWatch,\n          loading: false,\n          maxPrice,\n          minPrice,\n          maxSize,\n          price\n        });\n        console.log(this.state);\n      } catch (error) {\n        console.log(error);\n      } //try_catch\n\n    };\n\n    this.sort = event => {\n      let {\n        sortedProducts\n      } = this.state;\n      const value = event.target.value;\n      if (value === \"alpha\") sortedProducts = sortedProducts.sort((a, b) => a.name > b.name ? 1 : -1);else if (value === \"price\") sortedProducts = sortedProducts.sort((a, b) => a.price > b.price ? 1 : -1);\n      this.setState({\n        sortedProducts: sortedProducts\n      });\n    };\n\n    this.getProduct = element => {\n      let tempProduct = [...this.state.products];\n      const product = tempProduct.find(product => product.element === element);\n      return product;\n    };\n\n    this.resetChanges = event => {\n      let {\n        products\n      } = this.state;\n      this.setState({\n        sortedProducts: products\n      });\n    };\n\n    this.handleChanges = event => {\n      const target = event.target;\n      const value = target.type === 'checkbox' ? target.checked : target.value;\n      const name = event.target.name;\n      this.setState({\n        [name]: value\n      }, this.filterProducts);\n    };\n\n    this.filterProducts = () => {\n      let {\n        products,\n        type,\n        compatibility,\n        price,\n        brand\n      } = this.state;\n      let tempProducts = [...products]; //capacity\n\n      if (compatibility !== 'all') tempProducts = tempProducts.filter(product => product.compatibility.includes(compatibility)); //type\n\n      if (type !== 'all') tempProducts = tempProducts.filter(product => product.type === type); //price\n\n      price = parseInt(price);\n      tempProducts = tempProducts.filter(product => product.price <= price); //brand\n\n      if (brand !== 'all') tempProducts = tempProducts.filter(product => product.brand === brand);\n      this.setState({\n        sortedProducts: tempProducts\n      });\n    };\n  }\n\n  //getData\n  componentDidMount() {\n    this.getData();\n  } //componentDidMount\n\n\n  //sort\n  formatData(items) {\n    let tempItems = items.map(item => {\n      let id = item.sys.id;\n      let images = item.fields.images.map(image => image.fields.file.url);\n      let product = { ...item.fields,\n        images,\n        id\n      };\n      return product;\n    });\n    return tempItems;\n  } //formatData\n\n\n  //filterProducts\n  render() {\n    return /*#__PURE__*/React.createElement(ProductContext.Provider, {\n      value: { ...this.state,\n        getProduct: this.getProduct,\n        handleChanges: this.handleChanges,\n        resetChanges: this.resetChanges,\n        sort: this.sort\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 13\n      }\n    }, this.props.children);\n  } //render\n\n\n} //ProductProvider\n\nconst ProductConsumer = ProductContext.Consumer;\nexport function withProductConsumer(Component) {\n  return function ConsumerWrapper(props) {\n    return /*#__PURE__*/React.createElement(ProductConsumer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 13\n      }\n    }, value => /*#__PURE__*/React.createElement(Component, Object.assign({}, props, {\n      context: value,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 27\n      }\n    })));\n  };\n} //withProductConsumer\n\nexport { ProductProvider, ProductConsumer, ProductContext };","map":{"version":3,"sources":["/home/alessio_barbiero/headlessCommerce/client/src/context.js"],"names":["React","Component","Client","ProductContext","createContext","ProductProvider","state","testProd","products","sortedProducts","onesToWatch","loading","type","compatibility","brand","price","minPrice","maxPrice","getData","fetch","then","res","text","setState","apiResponse","catch","err","test","response","getEntries","content_type","order","formatData","items","tempSorted","sort","a","b","Math","min","map","item","max","maxSize","size","console","log","error","event","value","target","name","getProduct","element","tempProduct","product","find","resetChanges","handleChanges","checked","filterProducts","tempProducts","filter","includes","parseInt","componentDidMount","tempItems","id","sys","images","fields","image","file","url","render","props","children","ProductConsumer","Consumer","withProductConsumer","ConsumerWrapper"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n//import items from './data';\nimport Client from './dataAPI';\n\nconst ProductContext= React.createContext();\n\nexport default class ProductProvider extends Component {\n\n    state={\n        testProd:\"\",\n        products:[],\n        sortedProducts: [],\n        onesToWatch: [],\n        loading: true,\n        type: \"all\",\n        compatibility: \"all\",\n        brand: \"all\",\n        price: 0,\n        minPrice: 0,\n        maxPrice: 0,\n    };\n\n    //getData\n    getData = async() =>{\n        \n        fetch(\"http://localhost:9000/testAPI\")\n        .then(res => res.text())\n        .then(res => this.setState({apiResponse: res}))\n        .catch(err => err);\n          \n        let testProd=test;\n        \n        try{\n            let response = await Client.getEntries({\n                content_type: \"photoStudio\",\n                order: \"fields.price\"\n            });\n        \n        let products=this.formatData(response.items);\n        let tempSorted=products.sort((a, b) => (a.price > b.price) ? 1 : -1);\n        let onesToWatch=[tempSorted[0], tempSorted[1], tempSorted[2]];\n        let minPrice=Math.min(...products.map(item => item.price));\n        let maxPrice=Math.max(...products.map(item => item.price));\n        let maxSize=Math.max(...products.map(item => item.size));\n        let price=maxPrice;\n\n        this.setState({\n            testProd,\n            products,\n            sortedProducts:products,\n            onesToWatch,\n            loading:false,\n            maxPrice,\n            minPrice,\n            maxSize,\n            price\n        });console.log(this.state)\n        }catch(error){\n            console.log(error);\n        }//try_catch\n    }//getData\n\n    componentDidMount(){\n        this.getData();\n    }//componentDidMount\n\n    sort = event => {\n        let {\n            sortedProducts\n        } = this.state;\n        const value=event.target.value;\n        if(value===\"alpha\")\n            sortedProducts=sortedProducts.sort((a, b) => (a.name > b.name) ? 1 : -1);\n        else if(value===\"price\")\n            sortedProducts=sortedProducts.sort((a, b) => (a.price > b.price) ? 1 : -1);\n        this.setState({sortedProducts:sortedProducts});\n    }//sort\n\n    formatData(items){\n        let tempItems=items.map(item =>{\n            let id=item.sys.id\n            let images=item.fields.images.map(image => image.fields.file.url);\n            let product={...item.fields,images,id};\n            return product;\n        });\n        return tempItems;\n    }//formatData\n\n    getProduct = (element) => {\n        let tempProduct=[...this.state.products];\n        const product=tempProduct.find(product => product.element === element);\n        return product;\n    }//getProduct\n\n    resetChanges = event => {\n        let{\n            products\n        } = this.state;\n        this.setState({sortedProducts:products})\n    }//resetChanges\n\n    handleChanges = event => {\n        const target=event.target;\n        const value=target.type === 'checkbox' ? target.checked : target.value;\n        const name=event.target.name;\n        this.setState({[name]:value},this.filterProducts)\n    }//handleChanges\n\n    filterProducts = () => {\n        let{\n            products,\n            type,\n            compatibility,\n            price,\n            brand\n        } = this.state;\n        let tempProducts=[...products];\n\n        //capacity\n        if(compatibility!=='all')\n            tempProducts=tempProducts.filter(product => product.compatibility.includes(compatibility))\n\n        //type\n        if(type!=='all')\n            tempProducts=tempProducts.filter(product => product.type === type);\n        \n        //price\n        price=parseInt(price);\n        tempProducts=tempProducts.filter(product => product.price <= price);\n        \n        //brand\n        if(brand!=='all')\n                tempProducts=tempProducts.filter(product => product.brand === brand)\n\n        this.setState({\n            sortedProducts:tempProducts\n        })\n    }//filterProducts\n\n    render() {\n        return (\n            <ProductContext.Provider value={{...this.state,getProduct: this.getProduct,handleChanges: this.handleChanges,resetChanges:this.resetChanges,sort:this.sort}}>\n                {this.props.children}\n            </ProductContext.Provider>\n        );\n    }//render\n}//ProductProvider\n\nconst ProductConsumer = ProductContext.Consumer;\n\nexport function withProductConsumer(Component){\n    return function ConsumerWrapper(props){\n        return(\n            <ProductConsumer>\n                {value => <Component {...props} context={value}/>}\n            </ProductConsumer>\n        )}\n}//withProductConsumer\n\nexport{ProductProvider,ProductConsumer,ProductContext}"]},"metadata":{},"sourceType":"module"}