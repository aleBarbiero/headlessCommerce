{"ast":null,"code":"var _jsxFileName = \"/home/alessio_barbiero/headlessCommerce/client/src/contextAPI.js\";\nimport React, { Component } from 'react';\nconst ProductContext = React.createContext();\nexport default class ProductProvider extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      categories: [],\n      products: [],\n      sortedProducts: [],\n      cart: [],\n      cartTotal: 0,\n      onesToWatch: [],\n      loading: true,\n      type: \"all\",\n      compatibility: \"all\",\n      brand: \"all\",\n      price: 0,\n      minPrice: 0,\n      maxPrice: 0\n    };\n\n    this.setUp = async () => {\n      try {\n        let products = await this.getProducts();\n        setTimeout(await this.getCart(), 5000);\n        let tempSorted = products.sort((a, b) => a.price > b.price ? 1 : -1);\n        let onesToWatch = [tempSorted[0], tempSorted[1], tempSorted[2]];\n        let minPrice = Math.min(...products.map(item => item.price));\n        let maxPrice = Math.max(...products.map(item => item.price));\n        let price = maxPrice;\n        this.setState({\n          products,\n          sortedProducts: products,\n          onesToWatch,\n          maxPrice,\n          minPrice,\n          price,\n          loading: false\n        });\n      } catch (error) {\n        console.log(error);\n      } //try_catch\n\n    };\n\n    this.getProducts = async () => {\n      let res = await fetch(\"http://localhost:9000/searchAPI?param=shoes\");\n      let products = await res.json();\n      console.log(products);\n      let tempProd = await products[\"hits\"].map(item => {\n        let element = item.productId;\n        let id = element;\n        let name = item.productName;\n        let brand = \"test\";\n        let compatibility = [\"test\"];\n        let type = \"shoes\";\n        let price = item.price;\n        let extras = [];\n        let inCart = false;\n        let qty = 0;\n        let total = 0;\n        let images = [item.image.link, item.image.link, item.image.link];\n        let product = {\n          id,\n          element,\n          name,\n          price,\n          brand,\n          compatibility,\n          type,\n          images,\n          extras,\n          inCart,\n          qty,\n          total\n        };\n        return product;\n      });\n      return tempProd;\n    };\n\n    this.getCart = async () => {\n      let res = await fetch(\"http://localhost:9000/getBasketAPI\");\n      let tempCart = await res.json();\n      if (tempCart[\"productItems\"]) tempCart[\"productItems\"].map(item => {});\n    };\n\n    this.getCart = async () => {\n      let cart = await fetch(\"http://localhost:9000/getBasketAPI\").then(res => res.json()).catch(err => err);\n      let tempCart = [];\n      if (cart[\"productItems\"]) cart[\"productitems\"].map(product => {\n        let id = product.productId;\n        let price = product.price;\n        let name = product.productName;\n        let item = {\n          id,\n          price,\n          name\n        };\n        return item;\n      });\n      return tempCart;\n    };\n\n    this.getCategories = async () => {\n      let res = await fetch(\"http://localhost:9000/categoriesAPI\");\n      let categories = await res.json();\n      console.log(categories);\n      let tempCat = await categories[\"data\"].map(item => {\n        let id = item.id;\n        let name = item.name.default;\n        let category = {\n          id,\n          name\n        };\n        return category;\n      });\n      return tempCat;\n    };\n\n    this.sort = event => {\n      let {\n        sortedProducts\n      } = this.state;\n      const value = event.target.value;\n      if (value === \"alpha\") sortedProducts = sortedProducts.sort((a, b) => a.name > b.name ? 1 : -1);else if (value === \"price\") sortedProducts = sortedProducts.sort((a, b) => a.price > b.price ? 1 : -1);\n      this.setState({\n        sortedProducts: sortedProducts\n      });\n    };\n\n    this.getProduct = element => {\n      let tempProduct = [...this.state.products];\n      const product = tempProduct.find(product => product.element === element);\n      return product;\n    };\n\n    this.resetChanges = event => {\n      let {\n        products\n      } = this.state;\n      this.setState({\n        sortedProducts: products\n      });\n    };\n\n    this.handleChanges = event => {\n      const target = event.target;\n      const value = target.type === 'checkbox' ? target.checked : target.value;\n      const name = event.target.name;\n      this.setState({\n        [name]: value\n      }, this.filterProducts);\n    };\n\n    this.addToCart = async id => {\n      await fetch(`http://localhost:9000/addItemToBasketAPI?item=${id}`).then(res => res.json()).catch(err => err);\n      let tempProducts = [...this.state.products];\n      const index = tempProducts.indexOf(this.getProduct(id));\n      const product = tempProducts[index];\n      product.inCart = true;\n      product.qty = 1;\n      product.total = product.price;\n      this.setState(() => {\n        return {\n          products: tempProducts,\n          cart: [...this.state.cart, product]\n        };\n      }, () => {\n        this.addTotals();\n      });\n    };\n\n    this.increment = async id => {\n      let tempCart = [...this.state.cart];\n      const selectedProduct = tempCart.find(item => item.element === id);\n      const index = tempCart.indexOf(selectedProduct);\n      const product = tempCart[index];\n      product.qty++;\n      product.total = product.qty * product.price;\n      this.setState(() => {\n        return {\n          cart: [...tempCart]\n        };\n      }, () => {\n        this.addTotals();\n      });\n    };\n\n    this.decrement = async id => {\n      let tempCart = [...this.state.cart];\n      const selectedProduct = tempCart.find(item => item.element === id);\n      const index = tempCart.indexOf(selectedProduct);\n      const product = tempCart[index];\n      product.qty--;\n      product.total = product.qty * product.price;\n      this.setState(() => {\n        return {\n          cart: [...tempCart]\n        };\n      }, () => {\n        this.addTotals();\n      });\n    };\n\n    this.clearCart = () => {\n      this.setState(() => {\n        return {\n          cart: []\n        };\n      }, () => {\n        this.restoreValues();\n      });\n      let cart = [...this.state.cart];\n      localStorage.setItem(\"cart\", cart);\n    };\n\n    this.removeItem = async id => {\n      let tempProducts = [...this.state.products];\n      let tempCart = [...this.state.cart];\n      tempCart = tempCart.filter(item => item.element !== id);\n      const index = tempProducts.indexOf(this.getProduct(id));\n      let removedProduct = tempProducts[index];\n      removedProduct.inCart = false;\n      removedProduct.qty = 0;\n      removedProduct.total = 0;\n      this.setState(() => {\n        return {\n          cart: [...tempCart],\n          products: [...tempProducts]\n        };\n      }, () => {\n        this.addTotals();\n      });\n      let cart = [...this.state.cart];\n      localStorage.setItem(\"cart\", cart);\n    };\n\n    this.restoreValues = () => {\n      let prods = [...this.state.products];\n      prods.map(item => {\n        item.qty = 0;\n        item.total = 0;\n        item.inCart = false;\n      });\n      this.setState(() => {\n        return {\n          products: prods\n        };\n      });\n    };\n\n    this.addTotals = () => {\n      let cartTotal = 0;\n      this.state.cart.map(item => cartTotal += item.total);\n      this.setState(() => {\n        return {\n          cartTotal: cartTotal\n        };\n      });\n    };\n\n    this.filterProducts = () => {\n      let {\n        products,\n        type,\n        compatibility,\n        price,\n        brand\n      } = this.state;\n      let tempProducts = [...products]; //capacity\n\n      if (compatibility !== 'all') tempProducts = tempProducts.filter(product => product.compatibility.includes(compatibility)); //type\n\n      if (type !== 'all') tempProducts = tempProducts.filter(product => product.type === type); //price\n\n      price = parseInt(price);\n      tempProducts = tempProducts.filter(product => product.price <= price); //brand\n\n      if (brand !== 'all') tempProducts = tempProducts.filter(product => product.brand === brand);\n      this.setState({\n        sortedProducts: tempProducts\n      });\n    };\n  }\n\n  //filterProducts\n  componentDidMount() {\n    this.setUp();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(ProductContext.Provider, {\n      value: { ...this.state,\n        getProduct: this.getProduct,\n        handleChanges: this.handleChanges,\n        resetChanges: this.resetChanges,\n        sort: this.sort,\n        addToCart: this.addToCart,\n        increment: this.increment,\n        decrement: this.decrement,\n        removeItem: this.removeItem,\n        clearCart: this.clearCart\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 13\n      }\n    }, this.props.children);\n  } //render\n\n\n} //ProductProvider\n\nconst ProductConsumer = ProductContext.Consumer;\nexport function withProductConsumer(Component) {\n  return function ConsumerWrapper(props) {\n    return /*#__PURE__*/React.createElement(ProductConsumer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 13\n      }\n    }, value => /*#__PURE__*/React.createElement(Component, Object.assign({}, props, {\n      context: value,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 27\n      }\n    })));\n  };\n} //withProductConsumer\n\nexport { ProductProvider, ProductConsumer, ProductContext };","map":{"version":3,"sources":["/home/alessio_barbiero/headlessCommerce/client/src/contextAPI.js"],"names":["React","Component","ProductContext","createContext","ProductProvider","state","categories","products","sortedProducts","cart","cartTotal","onesToWatch","loading","type","compatibility","brand","price","minPrice","maxPrice","setUp","getProducts","setTimeout","getCart","tempSorted","sort","a","b","Math","min","map","item","max","setState","error","console","log","res","fetch","json","tempProd","element","productId","id","name","productName","extras","inCart","qty","total","images","image","link","product","tempCart","then","catch","err","getCategories","tempCat","default","category","event","value","target","getProduct","tempProduct","find","resetChanges","handleChanges","checked","filterProducts","addToCart","tempProducts","index","indexOf","addTotals","increment","selectedProduct","decrement","clearCart","restoreValues","localStorage","setItem","removeItem","filter","removedProduct","prods","includes","parseInt","componentDidMount","render","props","children","ProductConsumer","Consumer","withProductConsumer","ConsumerWrapper"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nconst ProductContext= React.createContext();\n\nexport default class ProductProvider extends Component {\n\n    state={\n        categories: [],\n        products:[],\n        sortedProducts: [],\n        cart:[],\n        cartTotal:0,\n        onesToWatch: [],\n        loading: true,\n        type: \"all\",\n        compatibility: \"all\",\n        brand: \"all\",\n        price: 0,\n        minPrice: 0,\n        maxPrice: 0,\n    };\n\n    setUp = async() => {\n        try{\n            let products=await this.getProducts();\n            setTimeout(await this.getCart(),5000);\n            let tempSorted=products.sort((a, b) => (a.price > b.price) ? 1 : -1);\n            let onesToWatch=[tempSorted[0], tempSorted[1], tempSorted[2]];\n            let minPrice=Math.min(...products.map(item => item.price));\n            let maxPrice=Math.max(...products.map(item => item.price));\n            let price=maxPrice;\n            this.setState({\n                products,\n                sortedProducts:products,\n                onesToWatch,\n                maxPrice,\n                minPrice,\n                price,\n                loading:false\n            })\n        }catch(error){\n            console.log(error);\n        }//try_catch\n    }//setUp\n\n    //getProducts\n    getProducts = async() => {\n        let res = await fetch(\"http://localhost:9000/searchAPI?param=shoes\");\n        let products = await res.json();\n        console.log(products);\n        let tempProd=await products[\"hits\"].map(item => {\n            let element=item.productId;\n            let id=element;\n            let name=item.productName;\n            let brand=\"test\";\n            let compatibility=[\"test\"];\n            let type=\"shoes\";\n            let price=item.price;\n            let extras=[]\n            let inCart=false;\n            let qty=0;\n            let total=0;\n            let images=[item.image.link,item.image.link,item.image.link];\n            let product={id,element,name,price,brand,compatibility,type,images,extras,inCart,qty,total};\n            return product;\n        })\n        return tempProd;\n    }\n\n    //getCart\n    getCart = async() => {\n        let res = await fetch(\"http://localhost:9000/getBasketAPI\");\n        let tempCart = await res.json();\n        if(tempCart[\"productItems\"])\n            tempCart[\"productItems\"].map(item=> {\n                \n            })\n    }\n\n    //getCart\n    getCart = async() => {\n        let cart = await fetch(\"http://localhost:9000/getBasketAPI\")\n        .then(res => res.json())\n        .catch(err => err);\n        let tempCart = [];\n        if(cart[\"productItems\"])\n            cart[\"productitems\"].map(product => {\n                let id=product.productId;\n                let price=product.price;\n                let name=product.productName;\n                let item={id,price,name};\n                return item;\n            });\n        return tempCart;\n    }//getCart\n\n    //getCategories\n    getCategories = async() => {\n        let res = await fetch(\"http://localhost:9000/categoriesAPI\");\n        let categories = await res.json();\n        console.log(categories);\n        let tempCat = await categories[\"data\"].map(item => {\n            let id=item.id;\n            let name=item.name.default;\n            let category={id,name};\n            return category;\n        })\n        return tempCat;\n    }//getCategories\n\n    //sort\n    sort = event => {\n        let {\n            sortedProducts\n        } = this.state;\n        const value=event.target.value;\n        if(value===\"alpha\")\n            sortedProducts=sortedProducts.sort((a, b) => (a.name > b.name) ? 1 : -1);\n        else if(value===\"price\")\n            sortedProducts=sortedProducts.sort((a, b) => (a.price > b.price) ? 1 : -1);\n        this.setState({sortedProducts:sortedProducts});\n    }//sort\n\n    //getProduct\n    getProduct = (element) => {\n        let tempProduct=[...this.state.products];\n        const product=tempProduct.find(product => product.element === element);\n        return product;\n    }//getProduct\n\n    //resetChanges\n    resetChanges = event => {\n        let{\n            products\n        } = this.state;\n        this.setState({sortedProducts:products})\n    }//resetChanges\n\n    //handleChanges\n    handleChanges = event => {\n        const target=event.target;\n        const value=target.type === 'checkbox' ? target.checked : target.value;\n        const name=event.target.name;\n        this.setState({[name]:value},this.filterProducts)\n    }//handleChanges\n\n    //addToCart\n    addToCart = async(id) => {\n        await fetch(`http://localhost:9000/addItemToBasketAPI?item=${id}`)\n        .then(res => res.json())\n        .catch(err => err);\n        let tempProducts=[...this.state.products];\n        const index=tempProducts.indexOf(this.getProduct(id));\n        const product=tempProducts[index];\n        product.inCart=true;\n        product.qty=1;\n        product.total=product.price;\n        this.setState(() => {\n            return{products: tempProducts, cart: [...this.state.cart,product]}\n        },\n        () => {\n            this.addTotals();\n        })\n    }\n\n    //increment\n    increment = async(id) => {\n        let tempCart = [...this.state.cart];\n        const selectedProduct = tempCart.find(item => item.element === id);\n        const index = tempCart.indexOf(selectedProduct);\n        const product = tempCart[index];\n        product.qty++;\n        product.total=product.qty*product.price;\n        this.setState(() => {\n            return {\n                cart:[...tempCart]\n            }\n        },() => {\n            this.addTotals();\n        })\n    }\n\n    //decrement\n    decrement = async(id) => {\n        let tempCart = [...this.state.cart];\n        const selectedProduct = tempCart.find(item => item.element === id);\n        const index = tempCart.indexOf(selectedProduct);\n        const product = tempCart[index];\n        product.qty--;\n        product.total=product.qty*product.price;\n        this.setState(() => {\n            return {\n                cart:[...tempCart]\n            }\n        },() => {\n            this.addTotals();\n        })\n    }\n\n    //clearCart\n    clearCart = () => {\n        this.setState(() => {\n            return{\n                cart:[]\n            }\n        }, () => {\n            this.restoreValues();\n        })\n        let cart = [...this.state.cart];\n        localStorage.setItem(\"cart\",cart);\n    }\n\n    //removeItem\n    removeItem = async(id) => {\n        let tempProducts = [...this.state.products];\n        let tempCart = [...this.state.cart];\n        tempCart = tempCart.filter(item => item.element !== id);\n        const index = tempProducts.indexOf(this.getProduct(id));\n        let removedProduct = tempProducts[index];\n        removedProduct.inCart=false;\n        removedProduct.qty=0;\n        removedProduct.total=0;\n        this.setState(() => {\n            return {\n                cart:[...tempCart],\n                products:[...tempProducts]\n            }\n        },() => {\n            this.addTotals();\n        })\n        let cart = [...this.state.cart];\n        localStorage.setItem(\"cart\",cart);\n    }\n\n    //restore\n    restoreValues = () => {\n        let prods=[...this.state.products];\n        prods.map(item => {\n            item.qty=0;\n            item.total=0;\n            item.inCart=false;\n        })\n        this.setState(() => {\n            return {\n                products: prods\n            }\n        })\n    } \n\n    //addTotals\n    addTotals = () => {\n        let cartTotal=0;\n        this.state.cart.map(item => (cartTotal += item.total));\n        this.setState(() => {\n            return {\n                cartTotal: cartTotal\n            }\n        })\n    }\n\n    filterProducts = () => {\n        let{\n            products,\n            type,\n            compatibility,\n            price,\n            brand\n        } = this.state;\n        let tempProducts=[...products];\n\n        //capacity\n        if(compatibility!=='all')\n            tempProducts=tempProducts.filter(product => product.compatibility.includes(compatibility))\n\n        //type\n        if(type!=='all')\n            tempProducts=tempProducts.filter(product => product.type === type);\n        \n        //price\n        price=parseInt(price);\n        tempProducts=tempProducts.filter(product => product.price <= price);\n        \n        //brand\n        if(brand!=='all')\n                tempProducts=tempProducts.filter(product => product.brand === brand)\n\n        this.setState({\n            sortedProducts:tempProducts\n        })\n    }//filterProducts\n    \n    componentDidMount(){\n        this.setUp();\n    }\n\n    render() {\n        return (\n            <ProductContext.Provider value={{...this.state,getProduct: this.getProduct,handleChanges: this.handleChanges,\n                resetChanges:this.resetChanges,sort:this.sort, addToCart:this.addToCart, increment:this.increment,decrement:this.decrement,\n                removeItem:this.removeItem,clearCart:this.clearCart}}>\n                {this.props.children}\n            </ProductContext.Provider>\n        );\n    }//render\n}//ProductProvider\n\nconst ProductConsumer = ProductContext.Consumer;\n\nexport function withProductConsumer(Component){\n    return function ConsumerWrapper(props){\n        return(\n            <ProductConsumer>\n                {value => <Component {...props} context={value}/>}\n            </ProductConsumer>\n        )}\n}//withProductConsumer\n\nexport{ProductProvider,ProductConsumer,ProductContext}"]},"metadata":{},"sourceType":"module"}